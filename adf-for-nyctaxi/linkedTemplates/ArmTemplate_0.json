{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-for-nyctaxi"
		},
		"ls_AzureDataLakeStorage1_nyctaxi_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_AzureDataLakeStorage1_nyctaxi'"
		},
		"ls_AzureDataLakeStorage1_nyctaxi_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsfornyctaxi.dfs.core.windows.net/"
		},
		"ls_HttpServer1_nyctaxi_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://d37ci6vzurychx.cloudfront.net"
		},
		"ls_HttpServer1_nyctaxi_2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://d37ci6vzurychx.cloudfront.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureDataLakeStorage1_nyctaxi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is the linked service for the adlsfornyctaxi",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_AzureDataLakeStorage1_nyctaxi_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_AzureDataLakeStorage1_nyctaxi_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_HttpServer1_nyctaxi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is the linked service for nyc taxi website",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_HttpServer1_nyctaxi_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_HttpServer1_nyctaxi_2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_HttpServer1_nyctaxi_2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_Parquet1_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureDataLakeStorage1_nyctaxi",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "2023",
						"fileSystem": "bronze"
					},
					"compressionCodec": null
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureDataLakeStorage1_nyctaxi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_Parquet1_source_http')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_HttpServer1_nyctaxi",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Month": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "/trip-data/green_tripdata_2023-0@{dataset().Month}.parquet\n",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_HttpServer1_nyctaxi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_Parquet1_source_http2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_HttpServer1_nyctaxi_2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Month": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "/trip-data/green_tripdata_2023-@{dataset().Month}.parquet",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_HttpServer1_nyctaxi_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1_for_copying_nyctaxi_source_to_adls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "source - https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page\n\ncopying 2024 data of each month dynamically from Jan to Dec 2024",
				"activities": [
					{
						"name": "ForEach",
						"description": "To loop from month 01 to 12, we use for loop activity",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,12)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition",
									"description": "To check whether the item from for each is  less than 9 or greater",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@lessOrEquals(item(),9 )",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "HttpReadSettings",
															"requestMethod": "GET"
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "dataset_Parquet1_source_http2",
														"type": "DatasetReference",
														"parameters": {
															"Month": {
																"value": "@item()",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "dataset_Parquet1_adls",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data",
												"description": "This activity will do the actual copy from source to destination, here source is the nyc link and destination is adls.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "HttpReadSettings",
															"requestMethod": "GET"
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "dataset_Parquet1_source_http",
														"type": "DatasetReference",
														"parameters": {
															"Month": {
																"value": "@item()",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "dataset_Parquet1_adls",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "nyc-taxi"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-06T08:07:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataset_Parquet1_source_http2')]",
				"[concat(variables('factoryId'), '/datasets/dataset_Parquet1_adls')]",
				"[concat(variables('factoryId'), '/datasets/dataset_Parquet1_source_http')]"
			]
		}
	]
}